name: Deploy pages (multi-lecture, simple)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  REPO: ${{ github.event.repository.name }}  # e.g., ps_211

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.2.0
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright (Chromium + deps)
        run: npx playwright install --with-deps chromium

      - name: Discover & build all lecture*.md
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          # find lecture*.md in repo root (adjust to use find for recursive)
          lectures=(lecture*.md)
          if [ ${#lectures[@]} -eq 0 ]; then
            echo "No lecture*.md files found."
            exit 1
          fi

          echo "Found lectures: ${lectures[*]}"

          # build each into dist/<slug>/ with correct base /<repo>/<slug>/
          for f in "${lectures[@]}"; do
            slug="${f%.md}"
            echo "ðŸ“¦ Building $f â†’ dist/$slug  (base=/${REPO}/${slug}/)"
            pnpm exec slidev build "$f" \
              --base "/${REPO}/${slug}/" \
              --out "dist/${slug}"
              --download
          done

          # Create a simple index at /ps_211/
          mkdir -p dist
          {
            echo '<!doctype html><meta charset="utf-8"><title>PS 211 â€” Lectures</title>'
            echo '<style>body{font:16px/1.5 system-ui,sans-serif;max-width:800px;margin:2rem auto;padding:0 1rem}ul{line-height:1.8}</style>'
            echo '<h1>PS 211 â€” Slide Decks</h1><ul>'
            for d in dist/*/ ; do
            # find any PDF generated in this deckâ€™s folder (matches exportFilename)
            pdf=$(find "$d" -maxdepth 1 -name '*.pdf' | head -n 1)
            if [ -n "$pdf" ]; then
                echo "<li><a href=\"$dname/\">$dname</a> â€” <a href=\"$dname/$(basename "$pdf")\">PDF</a></li>"
            else
                echo "<li><a href=\"$dname/\">$dname</a></li>"
            fi
            done
            echo '</ul>'
            } > dist/index.html
            
      - name: Sanity check output
        run: |
          echo "Top-level dist contents:"
          ls -la dist
          echo "Index files found:"
          find dist -maxdepth 2 -type f -name index.html -print

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
